{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "new-data-model.schema.json",
  "title": "New Data Model Schema",
  "description": "Schema definitions for the new single-document data model",
  "definitions": {
    "BaseEntity": {
      "type": "object",
      "required": ["id", "tenantId", "createdAt", "updatedAt", "createdBy", "updatedBy"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the entity"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID this entity belongs to"
        },
        "createdAt": {
          "type": "number",
          "description": "Creation timestamp"
        },
        "updatedAt": {
          "type": "number",
          "description": "Last update timestamp"
        },
        "createdBy": {
          "type": "string",
          "description": "User ID who created the entity"
        },
        "updatedBy": {
          "type": "string",
          "description": "User ID who last updated the entity"
        }
      }
    },
    "BaseEntityWithName": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntity" },
        {
          "type": "object",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the entity"
            }
          }
        }
      ]
    },
    "Account": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntityWithName" },
        {
          "type": "object",
          "required": ["companyName", "status", "industry", "tier", "tags", "address", "city", "state", "zipcode", "country", "phone", "website", "notes", "source"],
          "properties": {
            "companyName": {
              "type": "string",
              "description": "Company name (alias for name)"
            },
            "status": {
              "type": "string",
              "enum": ["lead", "qualified", "active", "inactive", "lost"],
              "description": "Account status"
            },
            "industry": {
              "type": "string",
              "description": "Industry classification"
            },
            "tier": {
              "type": "string",
              "enum": ["A", "B", "C"],
              "description": "Account tier"
            },
            "tags": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Account tags"
            },
            "address": {
              "type": "string",
              "description": "Street address"
            },
            "city": {
              "type": "string",
              "description": "City"
            },
            "state": {
              "type": "string",
              "description": "State or province"
            },
            "zipcode": {
              "type": "string",
              "description": "ZIP or postal code"
            },
            "country": {
              "type": "string",
              "description": "Country"
            },
            "phone": {
              "type": "string",
              "description": "Phone number"
            },
            "website": {
              "type": "string",
              "description": "Company website"
            },
            "linkedInUrl": {
              "type": "string",
              "description": "LinkedIn company page URL"
            },
            "latitude": {
              "type": "number",
              "description": "GPS latitude"
            },
            "longitude": {
              "type": "number",
              "description": "GPS longitude"
            },
            "notes": {
              "type": "string",
              "description": "Account notes"
            },
            "source": {
              "type": "string",
              "description": "Lead source"
            },
            "externalId": {
              "type": "string",
              "description": "External system ID"
            },
            "salesOwnerId": {
              "type": "string",
              "description": "Sales owner user ID (legacy)"
            },
            "salesOwnerName": {
              "type": "string",
              "description": "Sales owner name (legacy)"
            },
            "salesOwnerRef": {
              "type": "string",
              "description": "Sales owner reference (legacy)"
            },
            "freshsalesId": {
              "type": "string",
              "description": "Freshsales ID (legacy)"
            },
            "companyStructure": {
              "type": "object",
              "properties": {
                "parentId": { "type": "string" },
                "locationType": {
                  "type": "string",
                  "enum": ["headquarters", "facility", "branch", "regional_office"]
                },
                "region": { "type": "string" },
                "msaSigned": { "type": "boolean" },
                "nationalAccountId": { "type": "string" },
                "assignedRep": { "type": "string" },
                "facilityCode": { "type": "string" },
                "headcount": { "type": "number" },
                "isUnionized": { "type": "boolean" },
                "hasTempLaborExperience": { "type": "boolean" },
                "workforceModel": {
                  "type": "string",
                  "enum": ["full_time", "flex", "outsourced", "mixed"]
                }
              }
            },
            "dealIntelligence": {
              "type": "object",
              "properties": {
                "complexityScore": { "type": "number", "minimum": 1, "maximum": 10 },
                "urgencyLevel": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"]
                },
                "painPoints": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "decisionMakers": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "influencers": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "blockers": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "competitiveVendors": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "complianceRequirements": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "implementationTimeline": { "type": "number" },
                "estimatedValue": { "type": "number" },
                "effortToRewardRatio": { "type": "number" }
              }
            },
            "associationCounts": {
              "type": "object",
              "properties": {
                "contacts": { "type": "number" },
                "locations": { "type": "number" },
                "deals": { "type": "number" },
                "jobOrders": { "type": "number" }
              }
            }
          }
        }
      ]
    },
    "Contact": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntity" },
        {
          "type": "object",
          "required": ["fullName", "firstName", "lastName", "email", "phone", "title", "accountId", "role", "status", "tags", "notes"],
          "properties": {
            "fullName": {
              "type": "string",
              "description": "Full name"
            },
            "firstName": {
              "type": "string",
              "description": "First name"
            },
            "lastName": {
              "type": "string",
              "description": "Last name"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email address"
            },
            "phone": {
              "type": "string",
              "description": "Phone number"
            },
            "title": {
              "type": "string",
              "description": "Job title"
            },
            "accountId": {
              "type": "string",
              "description": "Reference to Account"
            },
            "role": {
              "type": "string",
              "enum": ["decision_maker", "influencer", "finance", "operations", "hr", "other"],
              "description": "Contact role"
            },
            "status": {
              "type": "string",
              "enum": ["active", "inactive"],
              "description": "Contact status"
            },
            "locationId": {
              "type": "string",
              "description": "Reference to Account location"
            },
            "tags": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Contact tags"
            },
            "notes": {
              "type": "string",
              "description": "Contact notes"
            },
            "salesOwnerId": {
              "type": "string",
              "description": "Sales owner user ID (legacy)"
            },
            "salesOwnerName": {
              "type": "string",
              "description": "Sales owner name (legacy)"
            },
            "salesOwnerRef": {
              "type": "string",
              "description": "Sales owner reference (legacy)"
            },
            "freshsalesId": {
              "type": "string",
              "description": "Freshsales ID (legacy)"
            },
            "contactProfile": {
              "type": "object",
              "properties": {
                "dealRole": {
                  "type": "string",
                  "enum": ["decision_maker", "recommender", "observer", "blocker", "champion"]
                },
                "influence": {
                  "type": "string",
                  "enum": ["low", "medium", "high"]
                },
                "personality": {
                  "type": "string",
                  "enum": ["dominant", "analytical", "amiable", "expressive"]
                },
                "contactMethod": {
                  "type": "string",
                  "enum": ["email", "phone", "in_person", "linkedin"]
                },
                "isContractSigner": { "type": "boolean" },
                "isDecisionInfluencer": { "type": "boolean" },
                "isImplementationResponsible": { "type": "boolean" },
                "relationshipStage": {
                  "type": "string",
                  "enum": ["cold", "warm", "hot", "advocate"]
                },
                "lastContactDate": { "type": "number" },
                "preferredContactTime": { "type": "string" },
                "communicationStyle": {
                  "type": "string",
                  "enum": ["formal", "casual", "technical", "relationship_focused"]
                },
                "department": { "type": "string" },
                "division": { "type": "string" },
                "location": { "type": "string" },
                "reportingTo": { "type": "string" },
                "directReports": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "dealNotes": { "type": "string" },
                "objections": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "interests": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "painPoints": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            },
            "associationCounts": {
              "type": "object",
              "properties": {
                "deals": { "type": "number" },
                "locations": { "type": "number" },
                "jobOrders": { "type": "number" }
              }
            }
          }
        }
      ]
    },
    "Location": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntityWithName" },
        {
          "type": "object",
          "required": ["accountId", "address", "city", "state", "zipcode", "country", "locationType"],
          "properties": {
            "accountId": {
              "type": "string",
              "description": "Reference to Account"
            },
            "address": {
              "type": "string",
              "description": "Street address"
            },
            "city": {
              "type": "string",
              "description": "City"
            },
            "state": {
              "type": "string",
              "description": "State or province"
            },
            "zipcode": {
              "type": "string",
              "description": "ZIP or postal code"
            },
            "country": {
              "type": "string",
              "description": "Country"
            },
            "phone": {
              "type": "string",
              "description": "Phone number"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email address"
            },
            "latitude": {
              "type": "number",
              "description": "GPS latitude"
            },
            "longitude": {
              "type": "number",
              "description": "GPS longitude"
            },
            "locationType": {
              "type": "string",
              "enum": ["headquarters", "facility", "branch", "regional_office"],
              "description": "Location type"
            },
            "headcount": {
              "type": "number",
              "description": "Number of employees"
            },
            "isUnionized": {
              "type": "boolean",
              "description": "Whether location is unionized"
            },
            "facilityCode": {
              "type": "string",
              "description": "Internal facility code"
            },
            "notes": {
              "type": "string",
              "description": "Location notes"
            },
            "tags": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Location tags"
            }
          }
        }
      ]
    },
    "JobOrder": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntityWithName" },
        {
          "type": "object",
          "required": ["title", "accountId", "openings", "remainingOpenings", "startDate", "shifts", "payRate", "otRules", "backgroundCheck", "drugTest", "language", "certifications", "priority", "urgencyScore", "recruiterOwnerId", "teamIds", "autoPostToJobsBoard", "submittalLimit", "internalOnly", "allowOverfill", "status", "metrics"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Job title (alias for name)"
            },
            "accountId": {
              "type": "string",
              "description": "Reference to Account (denormalized)"
            },
            "locationId": {
              "type": "string",
              "description": "Reference to Account location"
            },
            "roleCategory": {
              "type": "string",
              "description": "Role category"
            },
            "openings": {
              "type": "number",
              "minimum": 1,
              "description": "Total number of openings"
            },
            "remainingOpenings": {
              "type": "number",
              "minimum": 0,
              "description": "Remaining openings"
            },
            "startDate": {
              "type": "string",
              "description": "Start date (ISO string)"
            },
            "endDate": {
              "type": "string",
              "description": "End date (ISO string)"
            },
            "targetFillDate": {
              "type": "string",
              "description": "Target fill date (ISO string)"
            },
            "shifts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["label", "start", "end", "days", "breakMinutes"],
                "properties": {
                  "label": { "type": "string" },
                  "start": { "type": "string" },
                  "end": { "type": "string" },
                  "days": {
                    "type": "array",
                    "items": { "type": "number", "minimum": 0, "maximum": 6 }
                  },
                  "breakMinutes": { "type": "number" },
                  "differential": { "type": "number" }
                }
              }
            },
            "payRate": {
              "type": "number",
              "minimum": 0,
              "description": "Pay rate"
            },
            "billRate": {
              "type": "number",
              "minimum": 0,
              "description": "Bill rate"
            },
            "markup": {
              "type": "number",
              "minimum": 0,
              "description": "Markup percentage"
            },
            "otRules": {
              "type": "object",
              "required": ["multiplier", "threshold"],
              "properties": {
                "multiplier": { "type": "number" },
                "threshold": { "type": "number" },
                "cap": { "type": "number" }
              }
            },
            "backgroundCheck": {
              "type": "object",
              "required": ["required"],
              "properties": {
                "required": { "type": "boolean" },
                "package": { "type": "string" },
                "vendor": { "type": "string" }
              }
            },
            "drugTest": {
              "type": "object",
              "required": ["required"],
              "properties": {
                "required": { "type": "boolean" },
                "panel": { "type": "string" },
                "vendor": { "type": "string" }
              }
            },
            "language": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required languages"
            },
            "minExperience": {
              "type": "number",
              "minimum": 0,
              "description": "Minimum experience in years"
            },
            "certifications": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required certifications"
            },
            "dressCode": {
              "type": "string",
              "description": "Dress code requirements"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "medium", "high", "urgent"],
              "description": "Job order priority"
            },
            "urgencyScore": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "AI-calculated urgency score"
            },
            "recruiterOwnerId": {
              "type": "string",
              "description": "Recruiter owner user ID"
            },
            "teamIds": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Team IDs"
            },
            "autoPostToJobsBoard": {
              "type": "boolean",
              "description": "Auto-post to jobs board"
            },
            "submittalLimit": {
              "type": "number",
              "minimum": 1,
              "description": "Submittal limit"
            },
            "internalOnly": {
              "type": "boolean",
              "description": "Internal only"
            },
            "allowOverfill": {
              "type": "boolean",
              "description": "Allow overfill"
            },
            "status": {
              "type": "string",
              "enum": ["draft", "open", "interviewing", "offer", "partially_filled", "filled", "closed", "canceled"],
              "description": "Job order status"
            },
            "notes": {
              "type": "string",
              "description": "Job order notes"
            },
            "tags": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Job order tags"
            },
            "metrics": {
              "type": "object",
              "required": ["submittals", "interviews", "offers", "placements", "jobAgingDays"],
              "properties": {
                "submittals": { "type": "number" },
                "interviews": { "type": "number" },
                "offers": { "type": "number" },
                "placements": { "type": "number" },
                "timeToFirstSubmittalHrs": { "type": "number" },
                "timeToFillDays": { "type": "number" },
                "jobAgingDays": { "type": "number" }
              }
            },
            "crmCompanyId": {
              "type": "string",
              "description": "Legacy CRM company reference"
            },
            "crmDealId": {
              "type": "string",
              "description": "Legacy CRM deal reference"
            },
            "worksiteId": {
              "type": "string",
              "description": "Legacy worksite reference"
            }
          }
        }
      ]
    },
    "Counter": {
      "allOf": [
        { "$ref": "#/definitions/BaseEntity" },
        {
          "type": "object",
          "required": ["counterId", "next"],
          "properties": {
            "counterId": {
              "type": "string",
              "description": "Counter identifier"
            },
            "next": {
              "type": "number",
              "minimum": 1,
              "description": "Next counter value"
            },
            "prefix": {
              "type": "string",
              "description": "Counter prefix"
            },
            "suffix": {
              "type": "string",
              "description": "Counter suffix"
            },
            "padding": {
              "type": "number",
              "minimum": 0,
              "description": "Number padding"
            },
            "description": {
              "type": "string",
              "description": "Counter description"
            },
            "lastUsed": {
              "type": "number",
              "description": "Last used timestamp"
            }
          }
        }
      ]
    }
  }
}
