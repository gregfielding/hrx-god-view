#!/bin/bash

echo "üö® EMERGENCY: Deleting problematic functions via Firebase CLI..."

# Most critical functions to delete first (these are causing the runaway costs)
CRITICAL_FUNCTIONS=(
  "updateActiveSalespeopleOnDeal"
  "updateActiveSalespeopleOnTask"
  "logAgencyCreated"
  "logAgencyUpdated"
  "logCustomerCreated"
  "logCustomerUpdated"
  "logAssignmentCreated"
  "logAssignmentUpdated"
  "onCompanyLocationCreated"
  "onCompanyLocationUpdated"
  "onCompanyLocationDeleted"
  "onCompanyCreatedApollo"
  "onContactCreatedApollo"
  "syncApolloHeadquartersLocation"
  "enrichCompanyOnCreate"
  "onDealUpdated"
  "processAILog"
  "runAIScheduler"
  "scheduledGmailSync"
  "scheduledTriggerTests"
  "sendWeeklyBalanceCheckIns"
  "sendWeeklyGrowthPrompts"
  "triggerScheduledCheckins"
  "monitorAIEngineProcessing"
  "monitorAIEngineProcessingWithSelfHealing"
  "monitorBuildDeploymentErrors"
  "monitorLoggingErrors"
  "monitorMobileAppErrors"
  "firestoreCompanySnapshotFanout"
  "firestoreContactSnapshotFanout"
  "firestoreLocationSnapshotFanout"
  "firestoreSalespersonSnapshotFanout"
  "associationsIntegrityNightly"
  "rebuildDealAssociations"
  "rebuildEntityReverseIndex"
  "rebuildCompanyLocationMirror"
  "cleanupContactCompanyAssociations"
  "cleanupUndefinedValues"
  "deleteDuplicateCompanies"
  "bulkEmailDomainMatching"
  "removeDuplicateCompanies"
  "removeContactsWithoutNames"
  "removeDuplicateContacts"
  "removePhoneNumberContacts"
  "enrichCompanyWeekly"
  "enrichCompanyBatch"
  "fetchCompanyNews"
  "fetchFollowedCompanyNews"
  "discoverCompanyLocations"
  "discoverCompanyUrls"
  "scrapeIndeedJobs"
  "enhanceCompanyWithSerp"
  "enhanceContactWithAI"
  "findDecisionMakers"
  "findDecisionMakersHttp"
  "findContactInfo"
  "manageAssociations"
  "fixContactAssociations"
  "linkContactsToCompanies"
  "linkCRMEntities"
  "migrateContactSchema"
  "findTenantIds"
  "extractCompanyInfoFromUrls"
  "triggerAINoteReview"
  "triggerAINoteReviewHttp"
)

echo "üóëÔ∏è  Deleting ${#CRITICAL_FUNCTIONS[@]} critical functions..."

for function in "${CRITICAL_FUNCTIONS[@]}"; do
  echo "Deleting function: $function"
  firebase functions:delete "$function" --force --yes
  if [ $? -eq 0 ]; then
    echo "‚úÖ Successfully deleted: $function"
  else
    echo "‚ùå Failed to delete: $function (may not exist or already deleted)"
  fi
done

echo ""
echo "‚úÖ Emergency function deletion completed!"
echo "üí∞ Your costs should start decreasing immediately"
echo "üìä Monitor your Firebase Console billing dashboard"
echo ""
echo "üîç If you still see high costs, run this script again with more functions"
