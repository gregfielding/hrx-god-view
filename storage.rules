rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Avatar upload access
    match /avatars/{fileName} {
      // Allow users to upload/delete their own avatar
      allow write, delete: if request.auth != null &&
                           fileName.matches(request.auth.uid + '.*');

      // Allow authenticated users to upload/delete tenant avatars
      allow write, delete: if request.auth != null &&
                           fileName.matches('tenant_.*');

      // Allow authenticated users to upload/delete customer avatars
      allow write, delete: if request.auth != null &&
                           fileName.matches('customer_.*');

      // Public read access (you can tighten later)
      allow read: if true;
    }

    // Agency logo upload access
    match /agency_logos/{fileName} {
      // Allow any authenticated user to upload/delete agency logos
      allow write, delete: if request.auth != null;
      // Public read access (you can tighten later)
      allow read: if true;
    }

    // Branding assets upload access (company logos, etc.)
    match /branding/{tenantId}/{fileName} {
      // Allow authenticated users to upload/delete branding assets for their tenant
      allow write, delete: if request.auth != null;
      // Public read access for branding assets
      allow read: if true;
    }

    // Company logo upload access
    match /companies/{tenantId}/{companyId}/{fileName} {
      // Allow authenticated users to upload/delete company logos for their tenant
      allow write, delete: if request.auth != null;
      // Public read access for company logos
      allow read: if true;
    }

    // Allow authenticated users to upload to customer AI training docs
    match /customers/{customerId}/aiTraining/{folder}/{allPaths=**} {
      allow read, write: if request.auth != null;
      // For production, restrict to HRX or customer admins
      // allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "HRX";
    }

    // Block everything else by default
    match /{allPaths=**} {
      allow read, write, delete: if false;
    }
  }
}